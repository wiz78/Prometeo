dnl Process this file with autoconf to produce a configure script.

dnl
dnl                              configure.in
dnl                          -------------------
dnl copyright            : (C) 2002-2003 by Simone Tellini
dnl email                : tellini@users.sourceforge.net
dnl revision             : $Id: configure.in,v 1.15 2003-05-09 18:48:49 tellini Exp $
dnl

dnl -----------------------------------
dnl Setup
dnl -----------------------------------

AC_INIT(src/Makefile.am)

AC_CONFIG_AUX_DIR(config)
AM_CONFIG_HEADER(src/include/config.h:src/include/config-h.in)

AM_INIT_AUTOMAKE(prometeo, 1.3)

dnl this doesn't work as I'd like it to
dnl AC_PREFIX_DEFAULT(/usr/local/prometeo)

test "$prefix" = NONE && prefix=/usr/local/prometeo
test "$exec_prefix" = NONE && exec_prefix=/usr/local/prometeo

eval conftemp=${sysconfdir}
AC_DEFINE_UNQUOTED( CFG_DIR, "$conftemp", [Config directory] )

eval conftemp=${libdir}
AC_DEFINE_UNQUOTED( MOD_DIR, "$conftemp/prometeo", [Modules directory] )

eval conftemp=${datadir}
AC_DEFINE_UNQUOTED( DATA_DIR, "$conftemp/prometeo", [Data directory] )

dnl -----------------------------------
dnl Checks for programs.
dnl -----------------------------------
AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_CHECK_TOOL( SED, sed )

dnl -----------------------------------
dnl Check for libltdl
dnl -----------------------------------
AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AC_CONFIG_SUBDIRS(libltdl)
AC_SUBST(LIBTOOL_DEPS)

dnl -----------------------------------
dnl Check for headers
dnl -----------------------------------
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME

AC_CHECK_HEADERS(string.h strings.h unistd.h syslog.h sys/syslog.h sys/pstat.h libutil.h zlib.h)

AC_CHECK_HEADER(security/pam_appl.h, 
				[AC_DEFINE(HAVE_SECURITY_PAM_APPL_H, 1, [Define to 1 if you have the <security/pam_appl.h> header file])],
				[AC_CHECK_HEADER(bsd_auth.h, 
				 [AC_DEFINE(HAVE_BSD_AUTH_H, 1, [Define to 1 if you have the <bsd_auth.h> header file])], 
				 [AC_MSG_ERROR(No usable authentication library found!)])
				])

AC_CHECK_HEADERS(netinet/ip.h netinet/ip_fil.h netinet/ip_nat.h)
AC_CHECK_HEADERS(netinet/ip_compat.h netinet/ip_fil_compat.h)
AC_CHECK_HEADERS(linux/netfilter_ipv4.h)

dnl -----------------------------------
dnl Checks for typedefs, structures and
dnl compiler characteristics
dnl -----------------------------------
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T

AC_CACHE_CHECK([for socklen_t], [promac_cv_var_socklen_t],
[AC_TRY_COMPILE(
	[#include <sys/types.h>
	 #include <sys/socket.h>],
	[socklen_t len; len = 1;],
	[promac_cv_var_socklen_t=yes],
	[promac_cv_var_socklen_t=no])
])
if test "$promac_cv_var_socklen_t" = no ; then
	AC_DEFINE( socklen_t, int, [Define to 'int' if <sys/socket.h> doesn't provide it.] )
fi

AC_CACHE_CHECK([for MSG_NOSIGNAL], [promac_cv_var_msg_no_signal],
[AC_TRY_COMPILE(
    [#include <sys/types.h>
	 #include <sys/socket.h>],
	[int foo = MSG_NOSIGNAL;],
	[promac_cv_var_msg_no_signal=yes],
	[promac_cv_var_msg_no_signal=no])
])
if test "$promac_cv_var_msg_no_signal" = no ; then
	AC_DEFINE( MSG_NOSIGNAL, 0, [Define to 0 if <sys/socket.h> doesn't define MSG_NOSIGNAL.])
fi

AC_CACHE_CHECK([whether sockaddr_un has sun_len], [promac_cv_var_SOCKADDR_UN_LEN],
[AC_TRY_COMPILE(
	[#include <sys/types.h>
	 #include <sys/socket.h>
	 #include <sys/un.h>],
	[struct sockaddr_un addr; addr.sun_len = 1;],
	[promac_cv_var_SOCKADDR_UN_LEN=yes],
	[promac_cv_var_SOCKADDR_UN_LEN=no])
])
if test "$promac_cv_var_SOCKADDR_UN_LEN" = yes ; then
	AC_DEFINE( HAVE_SOCKADDR_UN_LEN, 1, [Define if sockaddr_un has the sun_len field] )
fi

AC_CACHE_CHECK([for msg_accrights field in struct msghdr], promac_cv_have_accrights_in_msghdr, 
[AC_TRY_RUN(
	[#include <sys/types.h>
	 #include <sys/socket.h>
	 #include <sys/uio.h>
	 int main() {
		#ifdef msg_accrights
		exit(1);
		#endif
		struct msghdr m;
		m.msg_accrights = 0;
		exit(0);
	}],
	[ promac_cv_have_accrights_in_msghdr="yes"],
	[ promac_cv_have_accrights_in_msghdr="no" ])
])
if test "x$promac_cv_have_accrights_in_msghdr" = "xyes" ; then
	AC_DEFINE( HAVE_ACCRIGHTS_IN_MSGHDR, 1, [Define if msghdr has the msg_accrights field] )
fi

AC_CACHE_CHECK([for msg_control field in struct msghdr], promac_cv_have_control_in_msghdr,
[AC_TRY_RUN(
	[#include <sys/types.h>
	 #include <sys/socket.h>
	 #include <sys/uio.h>
	 int main() {
		#ifdef msg_control
		exit(1);
		#endif
		struct msghdr m;
		m.msg_control = 0;
		exit(0);
	}],
	[ promac_cv_have_control_in_msghdr="yes" ],
	[ promac_cv_have_control_in_msghdr="no" ])
])
if test "x$promac_cv_have_control_in_msghdr" = "xyes" ; then
	AC_DEFINE( HAVE_CONTROL_IN_MSGHDR, 1, [Define if msghdr has the msg_control field] )
fi

dnl -----------------------------------
dnl Check for options
dnl -----------------------------------
use_ssl="no"
AC_ARG_WITH( openssl,
			[  --with-openssl[[=DIR]]    build with OpenSSL support [[/usr/local/ssl]]],
			[
				case "$withval" in
					no)
						openssl_prefix=""
					;;
					yes)
						openssl_prefix="/usr/local/ssl"
						use_ssl="yes"
						AC_DEFINE( USE_SSL, 1, [Define to build with OpenSSL support] )
					;;
					*)
						openssl_prefix=$withval
						use_ssl="yes"
						AC_DEFINE( USE_SSL, 1, [Define to build with OpenSSL support] )
				esac
			],
			[openssl_prefix=""]
)
if test "x$openssl_prefix" != "x" ; then
	LDFLAGS="-L${openssl_prefix}/lib ${LDFLAGS}"
	CPPFLAGS="-I${openssl_prefix}/include ${CPPFLAGS}"
fi

dnl -----------------------------------
dnl Check for libraries functions
dnl -----------------------------------
AC_CHECK_FUNCS(memset memcpy strdup strncmp)
AC_CHECK_FUNCS(setsid setproctitle)
AC_CHECK_FUNCS(sendmsg recvmsg)

AM_WITH_EXPAT

AC_CHECK_LIB(util, setproctitle, [AC_DEFINE(HAVE_SETPROCTITLE, 1, [Define if you have setproctitle()])])
AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(nsl, gethostent,, [AC_CHECK_LIB(resolv, gethostbyname)])
AC_CHECK_LIB(z, deflate)
AC_CHECK_LIB(pam, pam_start, [], [library 'pam' is required])

if test "x$openssl_prefix" != "x" ; then
  dnl Order matters!
  AC_CHECK_LIB(crypto, [CRYPTO_new_ex_data], [], [AC_MSG_ERROR([library 'crypto' is required for OpenSSL])])
  AC_CHECK_LIB(ssl,    [SSL_library_init], [], [AC_MSG_ERROR([library 'ssl' is required for OpenSSL])])
fi

dnl -----------------------------------
dnl Misc functions checks
dnl -----------------------------------

AC_CACHE_CHECK([whether vsyslog accepts a stdarg va_list], [promac_cv_var_VSYSLOG],
[AC_TRY_LINK(
	[#ifdef HAVE_SYSLOG_H
	 #include <syslog.h>
	 #endif
	 #ifdef HAVE_SYS_SYSLOG_H
	 #include <sys/syslog.h>
	 #endif
	 #include <stdarg.h>],
	[ void foo( int a, char *b, ... ) { va_list ap; va_start( ap, b ); vsyslog( a, b, ap ); va_end( ap );  } ],
	[promac_cv_var_VSYSLOG=yes],
	[promac_cv_var_VSYSLOG=no])
])
if test "$promac_cv_var_VSYSLOG" = yes ; then
	AC_DEFINE( HAVE_VSYSLOG, 1, [Define if there is a stdarg-compatible vsyslog function] )
fi

AC_CACHE_CHECK([for PS_STRINGS], [promac_cv_var_PS_STRINGS],
[AC_TRY_LINK(
	[#include <machine/vmparam.h>
	 #include <sys/exec.h>
	],
	[PS_STRINGS->ps_nargvstr = 1;
	 PS_STRINGS->ps_argvstr = "foo";],
	[promac_cv_var_PS_STRINGS=yes],
	[promac_cv_var_PS_STRINGS=no])
])
if test "$promac_cv_var_PS_STRINGS" = yes ; then
  AC_DEFINE([HAVE_PS_STRINGS], [], [Define if the PS_STRINGS thing exists.])
fi

AC_ARG_ENABLE(ipv6,
 [  --enable-ipv6          enable IPv6 support],
 [use_ipv6="$enableval"],
 [use_ipv6="no"]
)

if test "$use_ipv6" = "yes" ; then

	AC_CACHE_CHECK([for IPv6 support], [promac_cv_var_IPV6],
	[AC_TRY_COMPILE(
		[#include <sys/types.h>
		 #include <sys/socket.h>],
		[int foo = AF_INET6;],
		[promac_cv_var_IPV6=yes],
		[promac_cv_var_IPV6=no])
	])
	if test "$promac_cv_var_IPV6" = yes ; then
		AC_DEFINE( HAVE_IPV6, 1, [Define if IPv6 support is available.] )
	fi

	AC_CACHE_CHECK([for getipnodebyname], [promac_cv_var_GETIPNODEBYNAME],
	[AC_TRY_LINK(
		[#include <sys/types.h>
		 #include <sys/socket.h>
		 #include <netdb.h>
		],
		[getipnodebyname( "foo", AF_INET6, 0, NULL );],
		[promac_cv_var_GETIPNODEBYNAME=yes],
		[promac_cv_var_GETIPNODEBYNAME=no])
	])
	if test "$promac_cv_var_GETIPNODEBYNAME" = yes ; then
		AC_DEFINE( HAVE_GETIPNODEBYNAME, 1, [Define if you have the getipnodebyname function.] )
	fi
fi

AC_ARG_ENABLE(debug,
 [  --enable-debug         enable debug logging]
 [use_debug="$enableval"],
 [use_debug="no"]
)
if test "$use_debug" = "yes" ; then
	AC_DEFINE( DEBUG, 1, [Define to 1 to enable debug logging.] )
fi

dnl -----------------------------------
dnl Substitute symbols
dnl -----------------------------------
AC_SUBST(ac_aux_dir)
AC_SUBST(sysconfdir)
AC_SUBST(CPPFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)
AC_SUBST(EXPAT_LIBS)

AM_CONDITIONAL(BUILD_WITH_SSL, test "$use_ssl" = "yes" )

dnl -----------------------------------
dnl Genereate the output files
dnl -----------------------------------
AC_OUTPUT([Makefile src/Makefile src/libprom/Makefile src/prometeo/Makefile
           src/include/Makefile src/prometeoctl/Makefile src/mod_tunnel/Makefile
		   src/mod_http/Makefile src/mod_ftp/Makefile
		   src/mod_cfg/Makefile src/mod_cfg/data/Makefile
		   src/mod_ssl/Makefile],
		  [test -z "$CONFIG_HEADERS" || echo timestamp > src/include/stamp-h.in])

